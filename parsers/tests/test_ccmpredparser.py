import unittest
from parsers import CCMpredParser
from utils.exceptions import InvalidFormat


class CCMpredParserTestCase(unittest.TestCase):

    def test_1(self):
        dummy_prediction = """0.00000000000000000000e+00	9.05865192413330078125e-01	4.48399752378463745117e-01	3.83993983268737792969e-02	7.80840754508972167969e-01	5.15280842781066894531e-01	2.66545146703720092773e-01	4.99921828508377075195e-01	4.54095661640167236328e-01	7.60651350021362304688e-01
9.05863702297210693359e-01	0.00000000000000000000e+00	7.22257912158966064453e-01	1.90076664090156555176e-01	1.08203485608100891113e-01	1.23369038105010986328e-01	5.28753221035003662109e-01	3.98827701807022094727e-01	7.34628140926361083984e-01	5.52688777446746826172e-01
4.48399752378463745117e-01	7.22256183624267578125e-01	0.00000000000000000000e+00	1.39001503586769104004e-01	8.06087076663970947266e-01	4.15808916091918945312e-01	3.66488158702850341797e-01	5.48547744750976562500e-01	3.75738739967346191406e-01	6.22575163841247558594e-01
3.83996069431304931641e-02	1.90076768398284912109e-01	1.39001443982124328613e-01	0.00000000000000000000e+00	3.90003859996795654297e-01	2.16557279229164123535e-01	4.70980733633041381836e-01	7.48713970184326171875e-01	3.39133590459823608398e-01	3.63562434911727905273e-01
7.80841588973999023438e-01	1.08203165233135223389e-01	8.06088566780090332031e-01	3.90004277229309082031e-01	0.00000000000000000000e+00	1.00000000000000000000e+00	4.70447808504104614258e-01	2.48236447572708129883e-01	1.31565973162651062012e-01	2.77379095554351806641e-01
5.15280425548553466797e-01	1.23368613421916961670e-01	4.15808051824569702148e-01	2.16556847095489501953e-01	9.99999344348907470703e-01	0.00000000000000000000e+00	4.25846457481384277344e-01	2.21113219857215881348e-01	9.12295103073120117188e-01	5.38769721984863281250e-01
2.66544729471206665039e-01	5.28752684593200683594e-01	3.66489529609680175781e-01	4.70980644226074218750e-01	4.70447897911071777344e-01	4.25846666097640991211e-01	0.00000000000000000000e+00	3.21736276149749755859e-01	5.99321126937866210938e-02	5.63172221183776855469e-01
4.99920457601547241211e-01	3.98826628923416137695e-01	5.48546612262725830078e-01	7.48714208602905273438e-01	2.48236656188964843750e-01	2.21113741397857666016e-01	3.21736931800842285156e-01	0.00000000000000000000e+00	6.80750489234924316406e-01	0.00000000000000000000e+00
4.54095035791397094727e-01	7.34628796577453613281e-01	3.75739067792892456055e-01	3.39132964611053466797e-01	1.31566718220710754395e-01	9.12294447422027587891e-01	5.99323771893978118896e-02	6.80750906467437744141e-01	0.00000000000000000000e+00	3.14438492059707641602e-01
7.60651111602783203125e-01	5.52687942981719970703e-01	6.22575819492340087891e-01	3.63562554121017456055e-01	2.77379721403121948242e-01	5.38770556449890136719e-01	5.63172996044158935547e-01	1.05407856665351573611e-07	3.14439445734024047852e-01	0.00000000000000000000e+00
#>META> {"version":"1.0.0","method":"ccmpred","workflow":[{"parameters":{"cpu_threads":2,"device":"cpu","""

        expected_res1 = [10, 9, 10, 10, 8, 7, 6, 8, 9, 8, 9, 10, 9, 10, 7]
        expected_res2 = [1, 2, 3, 2, 3, 2, 1, 1, 1, 2, 3, 4, 4, 5, 1]
        expected_score = [0.7606511116027832, 0.7346287965774536, 0.6225758194923401, 0.55268794298172,
                          0.5485466122627258, 0.5287526845932007, 0.5152804255485535, 0.49992045760154724,
                          0.4540950357913971, 0.39882662892341614, 0.37573906779289246, 0.36356255412101746,
                          0.33913296461105347, 0.27737972140312195, 0.26654472947120667]

        output = CCMpredParser(dummy_prediction)
        self.assertEqual(15, len(output))
        self.assertListEqual(expected_res1, [contact[0] for contact in output])
        self.assertListEqual(expected_res2, [contact[1] for contact in output])
        self.assertListEqual(expected_score, [contact[2] for contact in output])

    def test_2(self):
        dummy_prediction = """###
D U M M Y
100 8 5.382865
"""
        with self.assertRaises(InvalidFormat):
            output = CCMpredParser(dummy_prediction)
            self.assertListEqual(output, [])

    def test_3(self):
        dummy_prediction = """###
CRYST1   73.530   39.060   23.150  90.00  90.00  90.00 P 21 21 21    4
100 8 5.382865
"""
        with self.assertRaises(InvalidFormat):
            output = CCMpredParser(dummy_prediction)
